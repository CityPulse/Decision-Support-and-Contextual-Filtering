/*******************************************************************************
 * The MIT License (MIT)
 *
 * Copyright (c) 2014-2015 Stefano Germano - Insight Centre for Data Analytics NUIG
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *******************************************************************************/
package org.insight_centre.urq.citypulse.wp5.decision_support_system;

import java.util.ArrayList;
import java.util.List;

import org.insight_centre.urq.citypulse.wp5.Configuration;
import org.insight_centre.urq.citypulse.wp5.contextual_filter.communication.ContextualEventSubscriber;
import org.insight_centre.urq.citypulse.wp5.contextual_filter.communication.DSRabbitMQConsumer;

import citypulse.commons.contextual_events_request.EventRequest;
import citypulse.commons.data.Coordinate;

/**
 * A utility component to update the Geospatial graph when a new event occurrs
 *
 * @author Thu-Le Pham
 * @author Stefano Germano
 *
 */
public class GeospatialGraphUpdater {

	/**
	 * @param args
	 */
	public static void main(final String[] args) {
		GeospatialGraphUpdater.subscribeEvents();
	}

	/**
	 *
	 */
	public static void subscribeEvents() {

		// create rabbitMqURI, restResource & eventRequest
		final String rabbitMqURI = Configuration.getInstance()
				.getEventRabbitURI();

		// FIXME: one event has one rest web service --> should many events have
		// same rest service
		final String restResource = Configuration.getInstance()
				.getRestResource() + "RoadCoordinates/listTopics/";

		// get events of all city
		final List<Coordinate> area = new ArrayList<Coordinate>();
		final EventRequest eventRequest = new EventRequest(area);

		final ContextualEventSubscriber ceSubscriber = new ContextualEventSubscriber(
				restResource, rabbitMqURI, new DSRabbitMQConsumer(),
				eventRequest);
		ceSubscriber.startSubscribeEvents();

	}

}
