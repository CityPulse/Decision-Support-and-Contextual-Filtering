package org.insight_centre.urq.citypulse.wp5.contextual_filter.test;

import java.net.URI;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.websocket.ClientEndpoint;
import javax.websocket.OnError;
import javax.websocket.OnMessage;
import javax.websocket.OnOpen;
import javax.websocket.Session;

import org.glassfish.tyrus.client.ClientManager;
import org.glassfish.tyrus.container.grizzly.client.GrizzlyClientContainer;
import org.insight_centre.urq.citypulse.wp5.Configuration;

public class test {

	@ClientEndpoint
	public static class Client {
		private static Logger logger = Logger.getLogger(Client.class.getName());

		@OnOpen
		public void open(Session s) {
			logger.info("Channel oppened " + s.getId());
		}

		@OnMessage
		public void message(Session s, String message) {
			logger.info(s.getId() + " received " + message);
		}

		@OnError
		public void err(Throwable ex) {
			logger.log(Level.SEVERE, ex.getMessage(), ex);
		}
	}

	public static void main(String[] args) throws Exception {

		final ClientManager container = ClientManager.createClient();
		container.getProperties().put(GrizzlyClientContainer.SHARED_CONTAINER,
				false);

		final String endpointURI1 = "ws://localhost:"
				+ Configuration.getInstance().getPort()
				+ "/websockets/contextual_events_request";
		final Session session = container.connectToServer(
				TestClientEndPoint.class,
				new URI(endpointURI1));
		System.out.println("session1: " + session.getId());

		final String endpointURI2 = "ws://localhost:"
				+ Configuration.getInstance().getPort()
				+ "/websockets/user_coordinate";
		final Session session2 = container.connectToServer(
				TestClientEndPoint.class,
 new URI(endpointURI2));
		System.out.println("session2: " + session2.getId());

//		Integer i = 0;
//		while (true) {
//			i++;
//			Thread.sleep(2000);
//			session.getBasicRemote().sendText(i.toString());
//
//			Thread.sleep(2000);
//			session2.getBasicRemote().sendText(i.toString());
		// }

	}
}