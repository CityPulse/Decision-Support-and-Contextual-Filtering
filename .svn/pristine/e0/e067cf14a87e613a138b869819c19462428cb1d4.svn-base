/**
 *
 */
package org.insight_centre.urq.citypulse.wp5.contextual_filter.main;

import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import org.insight_centre.urq.citypulse.wp5.contextual_filter.contextual_event_system.CityEventConsumer;

import eu.citypulse.uaso.gdiclient.CpGdiInterface;
import eu.citypulse.uaso.gdiclient.persistdata.CpGdiEventStream;
import eu.citypulse.uaso.gdiclient.persistdata.CpGdiPersistable;
import eu.citypulse.uaso.gdiclient.routes.CpRouteRequest;

/**
 * @author Thu-Le Pham
 * @date 26 Oct 2015
 */
public class TestConnection {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		connectToGDI();

		final List<String[]> eventTopicsGeoDB = new ArrayList<String[]>();
		eventTopicsGeoDB.add(new String[] { "events",
				"7bf9af8f-68cf-5acc-b20c-4c95741b945e" });
		eventTopicsGeoDB.add(new String[] { "events",
				"31dd6e16-c272-564f-a744-1da1f0011ca6" });
		eventTopicsGeoDB.add(new String[] { "events",
				"47e18070-bac6-542a-a0ec-c91c90c2424a" });

		final CityEventConsumer consumer = new CityEventConsumer(
				eventTopicsGeoDB, null);


	}

	public static void connectToGDI() {

		/*
		 * Connect to GeoDB to get event streams and sensor stream
		 */
		final CpGdiInterface cgi;
		try {
			cgi = new CpGdiInterface("127.0.0.1", 5432);
			// cgi = new CpGdiInterface("localhost", 5438);

			/*
			 * place of interest
			 */
			final CpRouteRequest cprr2 = cgi.getCityRoutes(10.1, 56.1, 10.2,
					56.2, CpRouteRequest.ROUTE_COST_METRIC_DISTANCE, 3);

			/*
			 * Get event stream to connect with MessageBus
			 */
			CpGdiPersistable[] eventStreams;
			eventStreams = cgi.getEventStreamsForRoute(cprr2.getRoute(1), 500);
			System.out.println("Event_Streams on Route:");
			for (final CpGdiPersistable eventStream : eventStreams) {
				System.out.println(eventStream);
			}

			/*
			 * Get sensor stream that related to place of interest
			 */

			eventStreams = cgi.getSensorsForRoute(cprr2.getRoute(1), 500);
			System.out.println("Sensor_Streams on Route:");
			for (final CpGdiPersistable eventStream : eventStreams) {
				System.out.println(eventStream);
			}

			final CpGdiEventStream cpgdies[] = cgi.getAllEventStreams();
			System.out.println("All on Route:");
			for (final CpGdiEventStream cpgdie : cpgdies) {
				System.out.println(cpgdie);
			}

			System.out
			.println("Events on Route in the last 5 minutes (300 seconds):");
			final CpGdiPersistable[] events = cgi.getEventsForRoute(
					cprr2.getRoute(1),
			new Timestamp(System.currentTimeMillis()), 300, 500.0);
			System.out.println(events.length);
			if (events.length > 0) {
				System.out.println(events[0]);
			}


		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		}
	}

}
